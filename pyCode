import numpy as np
import pandas as pd
import csv


def check(value):
    vector = [0, 0, 0, 0, 0, 0, 0]
    if(-1 <= value <= -0.33 and round(value, 2) == value):
        fuzzify(vector, value, 0)
    if(-0.66 <= value <= 0 and round(value, 2) == value):
        fuzzify(vector, value, 1)
    if(-0.33 <= value <= 0.15 and round(value, 2) == value):
        fuzzify(vector, value, 2)
    if(0 <= value <= 0.3 and round(value, 2) == value):
        fuzzify(vector, value, 3)
    if(0.15 <= value <= 0.45 and round(value, 2) == value):
        fuzzify(vector, value, 4)
    if(0.3 <= value <= 0.75 and round(value, 2) == value):
        fuzzify(vector, value, 5)
    if(0.45 <= value <= 1 and round(value, 2) == value):
        fuzzify(vector, value, 6)
    return vector


def fuzzify(vector, value, set_number):
    sets = [[-1, -0.66, -0.33], [-0.66, -0.33, 0], [-0.33, 0, 0.15], [0,
                                                                      0.15, 0.33], [0.15, 0.33, 0.45], [0.33, 0.45, 0.75], [0.45, 0.75, 1]]
    if(set_number == 0):
        if(value <= sets[0][1]):
            vector[0] = 1
            return vector
        else:
            vector[0] = round((value-sets[0][1])/(sets[0][2]-sets[0][1]), 2)
            vector[1] = round(1-vector[0], 2)
            return vector
    elif(set_number >= 1 and set_number <= 4):
        if(value > sets[set_number][1]):
            vector[set_number] = round(
                (value-sets[set_number][1])/(sets[set_number][2]-sets[set_number][1]), 2)
            vector[set_number+1] = round(1-vector[set_number], 2)
            return vector
    elif(set_number == 5):
        if(value > sets[set_number][1]):
            vector[set_number] = round(
                (value-sets[set_number][1])/(sets[set_number][2]-sets[set_number][1]), 2)
            vector[set_number+1] = round(1-vector[set_number], 2)
            return vector
    elif(set_number == 6):
        if(value > 0.75):
            vector[set_number] = 1
            return vector


file = pd.read_excel("D:\input.xlsx")
input1 = file.iloc[:, 0].tolist()
input2 = file.iloc[:, 1].tolist()
output_list = []
fam = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 2], [
    0, 0, 0, 0, 1, 2, 4], [0, 0, 0, 1, 1, 3, 5], [0, 0, 1, 2, 3, 5, 7], [0, 1, 2, 4, 5, 7, 8]]
fam_centroids = [-0.5, 0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
for iterator1 in range(0, len(input1)):
    vector1 = check(round(input1[iterator1]/10, 2))
    vector2 = check(round(input2[iterator1]/30, 2))
    summation = 0
    weight_sum = 0
    for counter1 in range(0, len(vector1)):
        if(vector1[counter1] != 0):
            for counter2 in range(0, len(vector2)):
                if(vector2[counter2] != 0):
                    centroid = fam_centroids[fam[counter1][counter2]]
                    weight_sum = weight_sum + \
                        (vector1[counter1]*vector2[counter2])
                    summation = summation + \
                        (vector1[counter1]*vector2[counter2])*centroid
    normal_output = summation/weight_sum
    denormalized_output = round(((normal_output*100)+100)/2, 2)
    output_list.append(denormalized_output)
# print(output_list)

with open('input.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(["x1", "x2", "Case"])
    for iterator1 in range(0, len(input1)):
        writer.writerow(
            [input1[iterator1], input2[iterator1], output_list[iterator1]])
